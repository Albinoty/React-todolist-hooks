{"version":3,"sources":["components/TodoItem.jsx","components/TodoList.jsx","App.jsx","index.js"],"names":["TodoItem","props","useState","input","setInput","className","check","id","onDoubleClick","type","onClick","onCheck","defaultChecked","text","onChange","onUpdate","onKeyPress","e","key","onDelete","TodoList","todos","setTodos","menu","setMenu","rendu","map","element","index","event","tmp","slice","target","value","updateToDo","splice","deleteToDo","checkToDo","length","filter","el","App","Date","getFullYear","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e782c2c8.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nconst TodoItem = (props) => {\n\n    const [input,setInput] = useState(false)\n    // Si on clique sur le texte, alors je mets true pour afficher l'input\n    const handleClick = () => {\n        setInput(true)\n    }\n    // Si j'appuie sur Enter, alors je mets false pour ne plus l'afficher\n    const conditonInput = (e) => {\n        if(e.key === \"Enter\")\n            setInput(false)\n    }\n\n    return (\n        <li className={props.check === true ? \"list-group-item bg-success w-75 mx-auto mx-auto d-flex justify-content-center align-items-center\" : \"list-group-item w-75 mx-auto d-flex justify-content-center align-items-center\"} id={props.id} onDoubleClick={handleClick} >\n            <input type=\"checkbox\" onClick={props.onCheck} className=\"\"  defaultChecked={props.check} />\n            {!input && <p className=\"m-0 px-5 w-75\">{props.text}</p>}\n            {input && <input type=\"text\" className=\"w-75\" onChange={props.onUpdate} onKeyPress={conditonInput} />}\n            <span>\n                <button type=\"button\" className=\"btn-close d-block col-2\" onClick={props.onDelete} data-dismiss=\"toast\"></button>\n            </span>\n        </li>\n    )\n\n}\n\nexport default TodoItem","import React, { useState } from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodoList = () => {\n    // Declaration d'un state avec un tableau vide ou on va stocker nos taches\n    const [todos,setTodos] = useState([]);\n    // Declaration d'un state avec all pour faire de l'affichage conditionelle\n    const [menu,setMenu] = useState(\"all\");\n\n    // Ajouter une tache\n    const addToDo = (e) => {\n        if(e.key === \"Enter\"){\n            setTodos([...todos,{   \n                id:  todos.length,\n                text: e.target.value,\n                check: false,\n            }])\n            e.target.value = \"\";\n        }\n    }   \n    // tache fait ou non\n    const checkToDo = (id) => {\n        // On copie le tableau pour mieux reattribuer avec setTodos\n        const tmp = todos.slice();\n\n        if(tmp[id].check === true)\n            tmp[id].check = false;\n        else\n            tmp[id].check = true;\n\n        setTodos(tmp);\n    }\n    //Supprimer une tache\n    const deleteToDo = (id) => {\n        // On copie le tableau pour mieux reattribuer avec setTodos\n        const tmp = todos.slice();\n\n        tmp.splice(id,1);\n\n        setTodos(tmp);\n    }\n    // Mettre a jour une tache\n    const updateToDo = (event,id) => {\n        // On copie le tableau pour mieux reattribuer avec setTodos\n        const tmp = todos.slice();    \n    \n        tmp[id].text = event.target.value \n        \n        setTodos(tmp);\n    }\n\n    // Creation de la variable du rendu de todo pour eviter une répétition\n    // les attributs on permet de passer en props des fonctions qui va permettre a jour directement via le parent\n    // Le element.id me permet de retrouver ma tache pour pouvoir l'utiliser par la suite\n    const rendu = todos.map((element,index) => \n        <TodoItem \n            key={index}  \n            id={element.id}\n            text={element.text} \n            check={element.check} \n            onUpdate={(event) => updateToDo(event,element.id)}\n            onDelete={() => deleteToDo(element.id)}\n            onCheck={() => checkToDo(element.id)}\n        />\n    )\n\n    return (\n        <div>\n            <h1 className=\"text-white text-center\">Todo List</h1>\n            <div className=\"form-group mt-5 mb-5\">\n                <input type=\"text\"className=\"d-block form-control w-75 mx-auto\" onKeyPress={addToDo} />\n            </div>\n            <div className=\"d-flex justify-content-center\">\n                <button className={menu === \"all\" ? \"btn btn-primary active\" : \"btn btn-primary\"} onClick={() => setMenu(\"all\")}>Tous</button>\n                <button className={menu === \"todo\" ? \"btn btn-warning active mx-2\" : \"btn btn-warning mx-2\"} onClick={() => setMenu(\"todo\")}>à faire</button>\n                <button className={menu === \"done\" ? \"btn btn-success active\" : \"btn btn-success\"} onClick={() => setMenu(\"done\")}>Fait</button>\n            </div>\n            <div className=\"mt-5\">\n                <ul className=\"list-group py-2\">\n                    {/* Conditon de rendu pour afficher toutes les taches, les taches fait et les taches non fait\n                    Le filter me permet de filtrer mon tableau */}\n                    {menu === \"all\" && rendu}\n                    {menu === \"todo\" && rendu.filter(el => el.props.check === false)}\n                    {menu === \"done\" && rendu.filter(el => el.props.check === true)}\n                </ul>\n            </div>\n        </div>\n    )\n};\n\nexport default TodoList;\n","import React from 'react';\n\nimport TodoList from './components/TodoList'\n\nconst App = () => {\n\n    return ( \n        <div className=\"container\">\n            <div className=\"bg-secondary\">\n                <TodoList />\n            </div>\n            <footer className=\"bg-secondary border-top text-center\">\n                <p className=\"py-2 text-white d-flex justify-content-center align-items-center\">Albinoty @ {new Date().getFullYear()} | <a href=\"https://github.com/Albinoty/React-todolist-hooks\" className=\"nav-link text-white\"><i className=\"fab fa-github mx-2 fa-2x\"></i> Github Repo</a></p>\n            </footer>\n        </div>\n    )\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport '@fortawesome/fontawesome-free/css/fontawesome.css';\nimport '@fortawesome/fontawesome-free/css/brands.css';\nimport '@fortawesome/fontawesome-free/css/solid.css';\n\n\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}